#!/bin/bash

. ${HOME}/etc/shell.conf

## anticipated situations to account for:
# - mplayer already running with correct cropping (same size video)
# - mplayer already running with incorrect cropping (new size video)
# - mplayer not running
# - launch directly into audio mode with slaved/stopped video

#[[ ${#@} -lt 2 ]] && exit 3
VIEWFRAMES=${1:-3}
VIDFILE=${2:-${XDG_VIDEOS_DIR}/default}
VIDPLS="${XDG_PLS_DIR}/default.pls"
DEGLOSSGAP=$(( ${DEGROTATE}-${DEGVIEWABLE} ))
MPLAYER_VFOPT="-vf screenshot"
ME=`basename $0`
BCSCALE=3

MASTER=0
[[ "${FRAME_NO:-1}" -eq 0 && "$( id -un )" == "lg" ]] && export MASTER=1

# try a last-ditch DISPLAY
if [[ -z "$DISPLAY" ]]; then export DISPLAY=:0; fi
# execute for other users
if [[ "$( id -un )" == "lg" ]]; then
    for screen in /home/lgS*; do
        if [[ -d "${screen}" ]]; then
            screennum=${screen##/home/lgS}
            #logger -p local3.info -i "$0: launching $ME for my screen \"${screennum}\""
            echo "$0: launching $ME for my screen \"${screennum}\""
            sudo -u lgS${screennum} -H DISPLAY=:0.${screennum} ${HOME}/bin/${ME} $@ &
            unset screennum
        fi
    done
fi

SCREEN_NO=0
SANITIZE_D=${DISPLAY//:/}
[[ -n "${SANITIZE_D##*\.}" && "${SANITIZE_D##*\.}" -ne 0 ]] && export SCREEN_NO=${SANITIZE_D##*\.}
MP_WINNAME="mp-lgS0"
DISPLAY=:0

DEGROTATE=36
DEGVIEWABLE=29
DEGLOSSGAP=$(( ${DEGROTATE}-${DEGVIEWABLE} ))

[[ -p "${MPVIDEOCTL}" ]] || mkfifo ${MPVIDEOCTL} && chmod 0664 ${MPVIDEOCTL}

if [ "${FRAME_NO}" -eq 0 ] && [ "${SCREEN_NO}" -eq 0 ]; then
	[[ -p "${MPAUDIOCTL}" ]] || mkfifo ${MPAUDIOCTL} && chmod 0664 ${MPAUDIOCTL}
	MPLAYER_UDPOPT="-udp-master -udp-ip 127.255.255.255 -udp-port"
	MPLAYER_AOOPT="-ao alsa"
	MP_WINNAME="mp-ts"
else
	MPLAYER_UDPOPT="-udp-slave -udp-port"
	MPLAYER_AOOPT="-ao null"
fi

# Re-organize frame numbers for left-to-right cropping
[[ $FRAME_NO -gt $(( $LG_FRAMES_MAX/2 )) ]] && FRAME_NO=$( echo "$FRAME_NO-$LG_FRAMES_MAX" | bc )
let FRAME_NO+=$((${VIEWFRAMES}/2))

# mplayer -identify outputs ID_VIDEO_WIDTH and ID_VIDEO_HEIGHT among other items
export `mplayer -quiet -ss 3 -frames 0 -vo null -ao null -identify "${VIDFILE}" 2>/dev/null | grep -e '\(WIDTH\|HEIGHT\)'`

# exit early
if [[ -z "${ID_VIDEO_WIDTH}" ]] || [[ -z "${ID_VIDEO_HEIGHT}" ]]; then
	logger -p local3.err -s "$0: could not identify WIDTH/HEIGHT of ${VIDFILE}"
	exit 2
fi
killall -9 mplayer; #sleep 1

WIDTH=$( echo "scale=$BCSCALE; (${ID_VIDEO_WIDTH}/(${DEGROTATE}*${VIEWFRAMES}))*${DEGVIEWABLE}" | bc -l )
#WIDTH=$( echo "scale=$BCSCALE; ((${ID_VIDEO_WIDTH}/(${DEGROTATE}*${VIEWFRAMES}))*${DEGVIEWABLE})+(((${ID_VIDEO_WIDTH}/(${DEGROTATE}*${VIEWFRAMES}))*(${DEGLOSSGAP}))/2)" | bc -l )
#HEIGHT=$( echo "scale=$BCSCALE; (${ID_VIDEO_WIDTH}/${ID_VIDEO_HEIGHT})*${WIDTH}" | bc -l )
HEIGHT=$( echo "scale=$BCSCALE; ${WIDTH}*1.777" | bc -l )

echo "cropped WIDTH: \"${WIDTH}\""
echo "cropped HEIGHT: \"${HEIGHT}\""

CROPX=$( echo "scale=$BCSCALE; (${FRAME_NO}*((${ID_VIDEO_WIDTH}/(${DEGROTATE}*${VIEWFRAMES}))*${DEGROTATE}))+(((${ID_VIDEO_WIDTH}/(${DEGROTATE}*${VIEWFRAMES}))*(${DEGLOSSGAP}))/2)" | bc -l )
#CROPX=$( echo "scale=$BCSCALE; (${FRAME_NO}*((${ID_VIDEO_WIDTH}/(${DEGROTATE}*${VIEWFRAMES}))*${DEGROTATE}))" | bc -l )
CROPY=$( echo "scale=$BCSCALE; (${ID_VIDEO_HEIGHT}-${HEIGHT})/2" | bc -l )

echo "CROPX from left: \"${CROPX}\""
echo "CROPY from bottom: \"${CROPY}\""

echo "--totaling `echo \"scale=$BCSCALE; ${CROPX}+${WIDTH}\" | bc -l` of ${ID_VIDEO_WIDTH}--"
# research use of "-vf expand=" filter for playing "extra"/out-of-bounds video

if [[ ${ID_VIDEO_WIDTH} -gt 1080 ]]; then
    MPLAYER_VFOPT="${MPLAYER_VFOPT},rectangle,crop=${WIDTH%%.*}:${HEIGHT%%.*}:${CROPX%%.*}:${CROPY%%.*}"
fi

#   -ao alsa:device=asym51 -softvol \
#    -vf screenshot,rectangle,crop=${WIDTH%%.*}::${CROPX%%.*}: \
#    -vf screenshot,rectangle,crop=${WIDTH%%.*}:${HEIGHT%%.*}:${CROPX%%.*}:${CROPY%%.*} \
if [ $SCREEN_NO -gt 0 ]; then
    MP_WINNAME="mp-lgS${SCREEN_NO}"
    let MPLAYER_PORT=${MPLAYER_PORT}+2
fi
mplayer \
    -really-quiet -msglevel global=5 \
    -nocache -osdlevel 0 \
    -nomouseinput -nograbpointer \
    -noconsolecontrols -idle -slave -input nodefault-bindings:file=${MPVIDEOCTL} \
    ${MPLAYER_UDPOPT} ${MPLAYER_PORT}\
    ${MPLAYER_AOOPT} \
    -name ${MP_WINNAME} \
    -vo vdpau,xv -fs \
    ${MPLAYER_VFOPT} \
    -loop 0 -playlist "${VIDPLS}" \
    2>${HOME}/tmp/mpvideo.err | while read line; do echo $line >>${HOME}/tmp/mpvideo.log; done &

if [ $MASTER -gt 0 ]; then
	let MPLAYER_PORT=${MPLAYER_PORT}+1
	mplayer \
	    -really-quiet -msglevel global=5 \
	    -nocache -osdlevel 0 \
	    -nomouseinput -nograbpointer \
	    -noconsolecontrols -idle -slave -input nodefault-bindings:file=${MPAUDIOCTL} \
	    ${MPLAYER_UDPOPT} ${MPLAYER_PORT} \
	    ${MPLAYER_AOOPT} \
	    -vo null \
	    -loop 0 "${VIDFILE}" \
	    2>${HOME}/tmp/mpaudio.err | while read line; do echo $line >>${HOME}/tmp/mpaudio.log; done &
fi

xdotool mousemove --screen 1 466 227 &
